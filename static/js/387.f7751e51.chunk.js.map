{"version":3,"file":"static/js/387.f7751e51.chunk.js","mappings":"gPAEaA,EAAaC,EAAAA,GAAAA,GAAH,uEAKVC,EAAeD,EAAAA,GAAAA,GAAH,kE,SC4BzB,EA9BgB,WACZ,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAVAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACFP,IAEJQ,EAAAA,EAAAA,IAAWR,GACVS,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAeN,EAAUM,EAAzB,GAET,GAAE,CAACV,KAGA,8BACKG,EAAQQ,QACL,wBACKR,EAAQS,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,GAC5B,OACI,UAAClB,EAAD,YACI,UAACE,EAAD,sBAAuBc,MACvB,uBAAIC,MAFSC,EAKxB,OACK,cAAGC,MAAO,CAACC,MAAO,WAAlB,wDAGzB,C,uJCbD,IAAMC,EAAW,mCACXC,EAAM,gCAECC,EAAoB,WAC7B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,oCAAmCD,IAC1CT,MAAK,SAAAa,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYC,EAAc,SAACC,GACxB,OAAOJ,MAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,4DAA2FO,IACtGhB,MAAK,SAAAiB,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAJ,UAAaL,EAAb,eAEP,GACJ,EAEYM,EAAkB,SAAC/B,GAC5B,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAgBnB,EAAhB,oBAAmCkB,EAAnC,oBACXT,MAAK,SAAAiB,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAM,qBAEjB,GACJ,EAEYE,EAAY,SAAChC,GACtB,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAgBnB,EAAhB,4BAA2CkB,EAA3C,oBACXT,MAAK,SAAAa,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYf,EAAa,SAACR,GACvB,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAgBnB,EAAhB,4BAA2CkB,EAA3C,2BACXT,MAAK,SAAAa,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/films-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewItem = styled.li`\n    margin-bottom: 50px;\n    color: #e6e6e6;\n`;\n\nexport const ReviewAuthor = styled.h3`\n  margin-bottom: 20px;\n  color: #74C7ED\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getReviews } from \"services/films-api\";\nimport { ReviewItem, ReviewAuthor } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const {movieId} = useParams();\n    const [authors, setAuthor] = useState([]);\n    console.log(authors);\n\n    useEffect(() => {\n        if(!movieId) return;\n          \n        getReviews(movieId)\n        .then(({results}) => setAuthor(results));\n\n    }, [movieId]);\n\n    return (\n        <>\n            {authors.length ? (\n                <ul>\n                    {authors.map(({author, content, id}) => {\n                        return (\n                            <ReviewItem key={id}>\n                                <ReviewAuthor>Author: {author}</ReviewAuthor>\n                                <p>{content}</p>\n                            </ReviewItem>\n                        )\n                    })}\n                </ul>) : (<p style={{color: '#e6e6e6'}}>We don't have any reviews for this movie.</p>)}\n        </>\n    );\n};\n\nexport default Reviews;","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Sorry, not found.')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["ReviewItem","styled","ReviewAuthor","movieId","useParams","useState","authors","setAuthor","console","log","useEffect","getReviews","then","results","length","map","author","content","id","style","color","USER_KEY","URL","getTrandingMovies","fetch","res","json","searchMovie","name","response","ok","Promise","reject","Error","getMovieDetails","getActors"],"sourceRoot":""}