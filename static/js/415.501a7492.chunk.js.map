{"version":3,"file":"static/js/415.501a7492.chunk.js","mappings":"2MAGaA,EAAYC,EAAAA,GAAAA,IAAH,sFAMTC,EAAOD,EAAAA,GAAAA,GAAH,+HAQJE,EAAOF,EAAAA,GAAAA,GAAH,6mBAWJG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sE,SCOtB,EAhCmB,SAAC,GAA+B,IAA9BK,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAElC,OACI,SAACR,EAAD,WACI,SAACE,EAAD,UACKI,EAAMG,KAAI,YAA+C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACpC,OACI,SAACV,EAAD,WACI,UAACC,EAAD,CAAWU,GAAE,iBAAKN,QAAL,IAAKA,EAAAA,EAAU,IAAf,OAAoBE,GAAMK,MAAO,CAAEC,KAAMT,GAAtD,WACI,gBACIU,IACIJ,EAAW,yCAC0BA,GAD1B,sCAIfK,IAAI,MAER,uBAAIP,GAAkCC,QAVnCF,EAclB,OAIhB,C,gGCOD,UA7Ba,WACT,IAAMH,GAAWY,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,MACCC,MAAK,SAAAC,GAAI,OAAIJ,GAAS,OAAII,EAAKC,SAAtB,GACb,GAAE,IAEHC,QAAQC,IAAItB,IAGR,iCACI,eACIuB,MAAO,CACHC,OAAQ,SACRC,UAAW,SACXC,aAAc,OACdC,MAAO,UAEPC,WAAY,8EAPpB,6BAUA,SAAC,IAAD,CAAY5B,MAAOA,EAAOC,SAAUA,EAAUC,OAAO,cAGhE,C,uJCbD,IAAM2B,EAAW,mCACXC,EAAM,gCAECb,EAAoB,WAC7B,OAAOc,MAAM,GAAD,OAAID,EAAJ,oCAAmCD,IAC1CX,MAAK,SAAAc,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYC,EAAc,SAACC,GACxB,OAAOJ,MAAM,GAAD,OAAID,EAAJ,gCAA+BD,EAA/B,4DAA2FM,IACtGjB,MAAK,SAAAkB,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAJ,UAAaL,EAAb,eAEP,GACJ,EAEYM,EAAkB,SAACC,GAC5B,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,oBAAmCb,EAAnC,oBACXX,MAAK,SAAAkB,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAM,qBAEjB,GACJ,EAEYG,EAAY,SAACD,GACtB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,oBACXX,MAAK,SAAAc,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYW,EAAa,SAACF,GACvB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,2BACXX,MAAK,SAAAc,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/films-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 1230px;\n  margin: 0 auto;\n  padding: 0 15px; \n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n  -webkit-box-shadow: 0px 0px 0px 5px #A0A0A0, inset 0px 10px 27px -8px #141414, inset 0px -10px 27px -8px #A31925, 5px 5px 9px 5px rgba(0,0,0,0.03); \n  box-shadow: 0px 0px 0px 5px #A0A0A0, inset 0px 10px 27px -8px #141414, inset 0px -10px 27px -8px #A31925, 5px 5px 9px 5px rgba(0,0,0,0.03);\n\n    &:hover {\n      -webkit-box-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0); \n      box-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0);\n    }\n`;\n\nexport const LinkTitle = styled(Link)`\n    color: #fff;\n    text-decoration: none;\n`;","import PropTypes from \"prop-types\";\nimport { Container, List, Item, LinkTitle } from \"./MoviesList.styled\";\n\nconst MoviesList = ({films, location, linkTo}) => {\n   \n    return (\n        <Container>\n            <List>\n                {films.map(({id, original_title, title, poster_path}) => {\n                    return (\n                        <Item key={id}>\n                            <LinkTitle to={`${linkTo ?? ''}${id}`} state={{ from: location}}>\n                                <img \n                                    src={\n                                        poster_path\n                                         ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                                         : `https://via.placeholder.com/200x300`\n                                    } \n                                    alt=\"\" \n                                />\n                                <p>{original_title ? original_title : title}</p>\n                            </LinkTitle>\n                        </Item>\n                    );\n                })}\n            </List>\n        </Container>\n    )\n};\n\nMoviesList.propTypes = {\n    films: PropTypes.array.isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nexport default MoviesList;","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getTrandingMovies } from \"services/films-api\";\n// import TrandingMovies from \"components/TrandingMovies\";\nimport MoviesList from \"components/MoviesList\";\n\nconst Home = () => {\n    const location = useLocation();\n    const [films, setFilms] = useState([]);\n\n    useEffect(() => { \n        \n        getTrandingMovies()\n        .then(resp => setFilms([...resp.results]));\n    }, []);\n\n    console.log(films);\n\n    return (\n        <>\n            <h1 \n                style={{\n                    margin: \"0 auto\",\n                    textAlign: \"center\",\n                    marginBottom: \"60px\",\n                    color: \"#FFFFFF\",\n                    // background: #333333;\n                    textShadow: \"0 -1px 4px #FFF, 0 -2px 10px #ff0, 0 -10px 20px #ff8000, 0 -18px 40px #F00\",\n                }}\n            >Tranding today</h1>\n            <MoviesList films={films} location={location} linkTo=\"movies/\"/>\n        </>\n    );\n};\n\nexport default Home;","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Sorry, not found.')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["Container","styled","List","Item","LinkTitle","Link","films","location","linkTo","map","id","original_title","title","poster_path","to","state","from","src","alt","useLocation","useState","setFilms","useEffect","getTrandingMovies","then","resp","results","console","log","style","margin","textAlign","marginBottom","color","textShadow","USER_KEY","URL","fetch","res","json","searchMovie","name","response","ok","Promise","reject","Error","getMovieDetails","movieId","getActors","getReviews"],"sourceRoot":""}