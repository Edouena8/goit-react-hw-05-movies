{"version":3,"file":"static/js/621.a67e62e7.chunk.js","mappings":"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","sources":["components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/MovieDetailsInfo/MovieDetailsInfo.styled.jsx","components/MovieDetailsInfo/MovieDetailsInfo.jsx","pages/MovieDetails.jsx","services/films-api.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const AdditionalTilte = styled.p`\n    margin-bottom: 20px;\n    text-align: center;\n    color:  #FFFFFF;\n`;\n\nexport const AddInfoLink = styled(Link)`\n    display: block;\n    width: 100px;\n    padding: 8px 16px;\n    text-align: center;\n    border-radius: 4px;\n    text-decoration: none;\n    color: white;\n    background-color: #331016;\n    font-weight: 500;\n    cursor: pointer;\n\n    &:hover {\n        -webkit-box-shadow: 5px 5px 5px 0px #000000, inset 4px 4px 15px 0px #000000, 5px 5px 15px 5px rgba(0,0,0,0); \n        box-shadow: 5px 5px 5px 0px #000000, inset 4px 4px 15px 0px #000000, 5px 5px 15px 5px rgba(0,0,0,0);\n    }\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 20px;\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.3);\n  margin-bottom: 40px;\n`;","import {  Suspense } from \"react\";\nimport { Outlet} from \"react-router-dom\";\nimport Loader from \"components/Loader\";\nimport { \n    AdditionalTilte, \n    AddInfoList, \n    AddInfoLink \n} from \"./AdditionalInfo.styled\";\n\nconst AdditionalInfo = () => {\n    return (\n        <div>\n            <AdditionalTilte>Additional information</AdditionalTilte>\n            <AddInfoList>\n                <li>\n                    <AddInfoLink to=\"cast\">Cast</AddInfoLink>\n                </li>\n                <li>\n                    <AddInfoLink to=\"reviews\">Reviews</AddInfoLink>\n                </li>\n            </AddInfoList>\n            <Suspense fallback={<Loader/>}>\n                <Outlet/>\n            </Suspense>\n        </div>\n    );\n};\n\nexport default AdditionalInfo;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 1230px;\n  margin: 0 auto;\n  padding: 0 15px; \n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  width: 100px;\n  padding: 8px 16px;\n  text-align: center;\n  border-radius: 4px;\n  margin-bottom: 40px;\n  text-decoration: none;\n  color: white;\n  background-color: #331016;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    -webkit-box-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0); \nbox-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0);\n  }\n`;\n\nexport const InfoWrap = styled.div`\n    display: flex;\n    gap: 30px;\n    color: #fff;\n    margin-bottom: 50px;\n`;\n\nexport const InfoBox = styled.div`\n    border-bottom: 0.5px solid rgba(255, 255, 255, 0.3);\n    margin-bottom: 50px;\n`\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #e6e6e6;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const Info = styled.p`\nmargin-bottom: 50px;\n`;","import PropTypes from \"prop-types\";\nimport AdditionalInfo from \"components/AdditionalInfo\";\nimport { \n    Container, \n    BackLink, \n    InfoWrap, \n    InfoBox, \n    MovieTitle, \n    Title, \n    Info \n} from \"./MovieDetailsInfo.styled\";\n\nconst MovieDetailsInfo = ({film, backLinkLocationRef}) => {\n    const {original_title, title, poster_path, vote_average, overview, genres} = film;\n\n    return (\n        <Container>\n                <BackLink to={backLinkLocationRef}>Go back</BackLink>           \n            <InfoWrap>\n                <img \n                    src={\n                        poster_path\n                         ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                         : `https://via.placeholder.com/300x450`\n                    } \n                    alt={title} />\n                    <InfoBox>\n                        <MovieTitle>{original_title ? original_title : title}</MovieTitle>\n                        <Info>User Score: {Math.round(vote_average * 100 / 10)}%</Info>\n                        <Title>Overview</Title>\n                        <Info>{overview}</Info>\n                        <Title>Genres</Title>\n                        <Info>{genres.map(({name}) => name).join(' ')}</Info>\n                    </InfoBox>               \n            </InfoWrap>\n            <AdditionalInfo/>\n        </Container>\n    );\n};\n\nMovieDetailsInfo.propTypes = {\n    film: PropTypes.shape({\n        original_title: PropTypes.string, \n        title: PropTypes.string, \n        poster_path: PropTypes.string.isRequired, \n        vote_average: PropTypes.number.isRequired, \n        overview: PropTypes.string.isRequired, \n        genres: PropTypes.array.isRequired\n    }),\n    backLinkLocationRef: PropTypes.object.isRequired,\n};\n\nexport default MovieDetailsInfo;","import { useState, useEffect, useRef } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport {  toast } from 'react-toastify';\nimport { getMovieDetails } from \"services/films-api\";\nimport MovieDetailsInfo from \"components/MovieDetailsInfo/MovieDetailsInfo\";\n\nconst MovieDetails = () => {\n    const {movieId} = useParams();\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\");\n    const [film, setFilm] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if(!movieId) return;\n        \n        getMovieDetails(movieId)\n        .then(resp => {\n\n            if(!resp) {\n                toast.error(`Sorry, not found`);\n                return;\n            }\n            setFilm(resp);\n        })\n        .catch(error => setError(error));\n\n    }, [movieId]);\n\n    return (\n        <div>\n            {film && <MovieDetailsInfo film={film} backLinkLocationRef={backLinkLocationRef.current}/>} \n            {error && (\n                <h2 \n                    style={{\n                        textAlign: 'center',\n                        color: 'white',\n                    }}>\n                        {error.message}\n                </h2>\n            )}\n        </div>\n    )\n}\n\nexport default MovieDetails;\n\n","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Sorry, not found.')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["AdditionalTilte","styled","AddInfoLink","Link","AddInfoList","to","Suspense","fallback","Loader","Container","BackLink","InfoWrap","InfoBox","MovieTitle","Title","Info","film","backLinkLocationRef","original_title","title","poster_path","vote_average","overview","genres","src","alt","Math","round","map","name","join","movieId","useParams","location","useLocation","useRef","state","from","useState","setFilm","error","setError","useEffect","getMovieDetails","then","resp","toast","catch","current","style","textAlign","color","message","USER_KEY","URL","getTrandingMovies","fetch","res","json","searchMovie","response","ok","Promise","reject","Error","getActors","getReviews"],"sourceRoot":""}