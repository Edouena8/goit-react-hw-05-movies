{"version":3,"file":"static/js/724.656c36ac.chunk.js","mappings":"uQAGaA,EAAYC,EAAAA,GAAAA,IAAH,sFAMTC,EAAgBD,EAAAA,GAAAA,GAAH,gPASbE,EAAeF,EAAAA,GAAAA,GAAH,+HAQZG,EAAeH,EAAAA,GAAAA,GAAH,2mBAWZI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sE,SCftB,EApBuB,SAAC,GAAuB,IAAtBM,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACQ,UAACR,EAAD,YACA,SAACE,EAAD,8BACA,SAACC,EAAD,UACKI,EAAME,KAAI,YAA+C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,YACpC,OACI,SAACT,EAAD,WACI,UAACC,EAAD,CAAWS,GAAE,iBAAYJ,GAAMK,MAAO,CAACC,KAAMR,GAA7C,WACI,gBAAKS,IAAG,yCAAoCJ,GAAeK,IAAI,MAC/D,uBAAIN,GAAkCD,QAH3BD,EAO1B,QAIhB,ECED,EAjBa,WACT,IAAMF,GAAWW,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,MACCC,MAAK,SAAAC,GAAI,OAAIJ,GAAS,OAAII,EAAKC,SAAtB,GACb,GAAE,IAEHC,QAAQC,IAAIrB,IAGR,SAAC,EAAD,CAAgBA,MAAOA,EAAOC,SAAUA,GAE/C,C,uJCAD,IAAMqB,EAAW,mCACXC,EAAM,gCAECP,EAAoB,WAC7B,OAAOQ,MAAM,GAAD,OAAID,EAAJ,oCAAmCD,IAC1CL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYC,EAAc,SAACC,GACxB,OAAOJ,MAAM,GAAD,OAAID,EAAJ,gCAA+BD,EAA/B,4DAA2FM,IACtGX,MAAK,SAAAY,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAJ,UAAaL,EAAb,eAEP,GACJ,EAEYM,EAAkB,SAACC,GAC5B,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,oBAAmCb,EAAnC,oBACXL,MAAK,SAAAY,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAM,qBAEjB,GACJ,EAEYG,EAAY,SAACD,GACtB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,oBACXL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYW,EAAa,SAACF,GACvB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,2BACXL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/TrandingMovies/TrandingMovies.styled.jsx","components/TrandingMovies/TrandingMovies.jsx","pages/Home.jsx","services/films-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 1230px;\n  margin: 0 auto;\n  padding: 0 15px; \n`;\n\nexport const TrendingTitle = styled.h1`\n    margin: 0 auto;\n    text-align: center;\n    margin-bottom: 60px;\n    color: #FFFFFF;\n    // background: #333333;\n    text-shadow: 0 -1px 4px #FFF, 0 -2px 10px #ff0, 0 -10px 20px #ff8000, 0 -18px 40px #F00;\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const TrendongItem = styled.li`\n  width: 200px;\n  -webkit-box-shadow: 0px 0px 0px 5px #A0A0A0, inset 0px 10px 27px -8px #141414, inset 0px -10px 27px -8px #A31925, 5px 5px 9px 5px rgba(0,0,0,0.03); \nbox-shadow: 0px 0px 0px 5px #A0A0A0, inset 0px 10px 27px -8px #141414, inset 0px -10px 27px -8px #A31925, 5px 5px 9px 5px rgba(0,0,0,0.03);\n\n    &:hover {\n      -webkit-box-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0); \n      box-shadow: #FFF 0 -1px 4px, #ff0 0 -2px 10px, #ff8000 0 -10px 20px, red 0 -18px 40px, 5px 5px 15px 5px rgba(0,0,0,0);\n    }\n`;\n\nexport const LinkTitle = styled(Link)`\n    color: #fff;\n    text-decoration: none;\n`;\n\n","import { Container, TrendingTitle, TrendingList, TrendongItem, LinkTitle } from \"./TrandingMovies.styled\";\n\nconst TrandingMovies = ({films, location}) => {\n    return (\n            <Container>\n            <TrendingTitle>Tranding today</TrendingTitle>\n            <TrendingList>\n                {films.map(({id, title, original_title, poster_path}) => {\n                    return (\n                        <TrendongItem key={id}>\n                            <LinkTitle to={`movies/${id}`} state={{from: location}}>\n                                <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"\" />\n                                <p>{original_title ? original_title : title}</p>\n                            </LinkTitle>\n                        </TrendongItem>\n                    );\n                })}\n            </TrendingList>\n        </Container>\n    );\n};\n\nexport default TrandingMovies;","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getTrandingMovies } from \"services/films-api\";\nimport TrandingMovies from \"components/TrandingMovies\";\n\nconst Home = () => {\n    const location = useLocation();\n    const [films, setFilms] = useState([]);\n\n    useEffect(() => { \n        \n        getTrandingMovies()\n        .then(resp => setFilms([...resp.results]));\n    }, []);\n\n    console.log(films);\n\n    return (\n        <TrandingMovies films={films} location={location}/>\n    );\n};\n\nexport default Home;","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Sorry, not found.')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["Container","styled","TrendingTitle","TrendingList","TrendongItem","LinkTitle","Link","films","location","map","id","title","original_title","poster_path","to","state","from","src","alt","useLocation","useState","setFilms","useEffect","getTrandingMovies","then","resp","results","console","log","USER_KEY","URL","fetch","res","json","searchMovie","name","response","ok","Promise","reject","Error","getMovieDetails","movieId","getActors","getReviews"],"sourceRoot":""}