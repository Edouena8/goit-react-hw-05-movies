{"version":3,"file":"static/js/780.f1a3372a.chunk.js","mappings":"qPAeA,EAfmB,SAAC,GAAwB,IAAvBA,EAAsB,EAAtBA,iBACjB,OACI,0BACI,kBAAMC,SAAUD,EAAhB,WACI,kBACIE,KAAK,OACLC,KAAK,eAGT,mBAAQD,KAAK,SAAb,wBAIf,ECQD,EAnByB,SAAC,GAAuB,IAAtBE,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAE9B,OACI,+BACI,wBACKD,EAAME,KAAI,YAAkC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,MAC7B,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMP,GAAlC,SACKG,GAAkCC,KAFlCF,EAMhB,OAIhB,ECyCD,EApDe,WACX,IAAMF,GAAWQ,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAEnCC,QAAQC,IAAIpB,GACZmB,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACFJ,IAEJK,EAAAA,EAAAA,IAAYL,GACXM,MAAK,YAAgB,IAAdC,EAAa,EAAbA,QACAA,EAAQC,OAKZd,EAASa,GAJLE,EAAAA,GAAAA,MAAA,UAAeT,EAAf,cAKP,IACAU,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAb,GAGf,GAAE,CAACK,IAcJ,OACI,iCACI,SAAC,EAAD,CAAYrB,iBAdK,SAAAgC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,EAAgB,CAAEX,MAAOyB,EAAKE,SAASC,UAAUC,QACjDJ,EAAKK,OACN,IAUMnC,EAAMyB,OAAS,IAAK,SAAC,EAAD,CAAkBzB,MAAOA,EAAOC,SAAUA,IAC9DW,IAAS,wBAAKA,EAAMwB,WACrB,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAKf,C,uJCtCD,IAAMC,EAAW,mCACXC,EAAM,gCAECC,EAAoB,WAC7B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,oCAAmCD,IAC1ChB,MAAK,SAAAoB,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYtB,EAAc,SAACvB,GACxB,OAAO2C,MAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,4DAA2FxC,IACtGwB,MAAK,SAAAsB,GACF,OAAGA,EAASC,GACDD,EAASD,OAGbG,QAAQC,OACX,IAAIC,MAAJ,UAAalD,EAAb,eAEP,GACJ,EAEYmD,EAAkB,SAACC,GAC5B,OAAOT,MAAM,GAAD,OAAIF,EAAJ,iBAAgBW,EAAhB,oBAAmCZ,EAAnC,oBACXhB,MAAK,SAAAsB,GACF,OAAGA,EAASC,GACDD,EAASD,OAGbG,QAAQC,OACX,IAAIC,MAAM,aAEjB,GACJ,EAEYG,EAAY,SAACD,GACtB,OAAOT,MAAM,GAAD,OAAIF,EAAJ,iBAAgBW,EAAhB,4BAA2CZ,EAA3C,oBACXhB,MAAK,SAAAoB,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYS,EAAa,SAACF,GACvB,OAAOT,MAAM,GAAD,OAAIF,EAAJ,iBAAgBW,EAAhB,4BAA2CZ,EAA3C,2BACXhB,MAAK,SAAAoB,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/SearchForm/SearchForm.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies.jsx","services/films-api.js"],"sourcesContent":["const SeaechForm = ({handleFormSubmit}) => {\n    return (\n        <div>\n            <form onSubmit={handleFormSubmit}>                   \n                <input \n                    type=\"text\"\n                    name=\"filmtitle\"\n                    // onChange={onParamsChange}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n};\n\nexport default SeaechForm;","import { Link } from \"react-router-dom\";\n\nconst SearchMoviesList = ({films, location}) => {\n   \n    return (\n        <>\n            <ul>\n                {films.map(({id, original_title, title}) => {\n                    return (\n                        <li key={id}>\n                            <Link to={`${id}`} state={{ from: location}}>\n                                {original_title ? original_title : title}\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n};\n\nexport default SearchMoviesList;","import { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { searchMovie } from \"services/films-api\";\nimport SeaechForm from \"components/SearchForm\";\nimport SearchMoviesList from \"components/SearchMoviesList\";\n\nconst Movies = () => {\n    const location = useLocation();\n    const [films, setFilms] = useState([]);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const filmTitle = searchParams.get('title' || '');\n    \n    console.log(films);\n    console.log(filmTitle)\n\n    useEffect(() => {\n        if(!filmTitle) return;\n\n        searchMovie(filmTitle)\n        .then(({results}) => {\n            if(!results.length) {\n                toast.error(`${filmTitle} not found`);\n                return;\n            }\n            \n            setFilms(results);\n        })\n        .catch(error => setError(error));\n            \n\n    }, [filmTitle]);\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        setSearchParams({ title: form.elements.filmtitle.value });\n        form.reset();\n      };\n\n    // const updateQueryString = (name) => {\n    //     const nextParams = name !== \"\" ? { name } : {};\n    //     setSearchParams(nextParams);\n    // };\n\n    return (\n        <>\n            <SeaechForm handleFormSubmit={handleFormSubmit}/>\n            {films.length > 0 && <SearchMoviesList films={films} location={location}/>}\n            {error && <h2>{error.message}</h2>}\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet/>\n            </Suspense>\n        </>\n    );\n\n};\n\nexport default Movies;\n","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Not found')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["handleFormSubmit","onSubmit","type","name","films","location","map","id","original_title","title","to","state","from","useLocation","useState","setFilms","error","setError","useSearchParams","searchParams","setSearchParams","filmTitle","get","console","log","useEffect","searchMovie","then","results","length","toast","catch","e","preventDefault","form","currentTarget","elements","filmtitle","value","reset","message","Suspense","fallback","USER_KEY","URL","getTrandingMovies","fetch","res","json","response","ok","Promise","reject","Error","getMovieDetails","movieId","getActors","getReviews"],"sourceRoot":""}