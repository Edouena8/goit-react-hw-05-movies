{"version":3,"file":"static/js/829.7d06958a.chunk.js","mappings":"qPAqBA,EAnBuB,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,4BACI,4CACA,wBACKD,EAAME,KAAI,YAAkC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,eACpB,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,iBAAYH,GAAMI,MAAO,CAACC,KAAMP,GAAxC,UACI,uBAAII,GAAkCD,OAFrCD,EAMhB,QAIhB,ECED,EAhBa,WACT,IAAMF,GAAWQ,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MACCC,MAAK,SAAAC,GAAI,OAAIJ,GAAS,OAAII,EAAKC,SAAtB,GACb,GAAE,IAEHC,QAAQC,IAAIlB,IAGR,SAAC,EAAD,CAAgBA,MAAOA,EAAOC,SAAUA,GAE/C,C,uJCCD,IAAMkB,EAAW,mCACXC,EAAM,gCAECP,EAAoB,WAC7B,OAAOQ,MAAM,GAAD,OAAID,EAAJ,oCAAmCD,IAC1CL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYC,EAAc,SAACC,GACxB,OAAOJ,MAAM,GAAD,OAAID,EAAJ,gCAA+BD,EAA/B,4DAA2FM,IACtGX,MAAK,SAAAY,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAJ,UAAaL,EAAb,eAEP,GACJ,EAEYM,EAAkB,SAACC,GAC5B,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,oBAAmCb,EAAnC,oBACXL,MAAK,SAAAY,GACF,OAAGA,EAASC,GACDD,EAASH,OAGbK,QAAQC,OACX,IAAIC,MAAM,aAEjB,GACJ,EAEYG,EAAY,SAACD,GACtB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,oBACXL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYW,EAAa,SAACF,GACvB,OAAOX,MAAM,GAAD,OAAID,EAAJ,iBAAgBY,EAAhB,4BAA2Cb,EAA3C,2BACXL,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/TrandingMovies/TrandingMovies.jsx","pages/Home.jsx","services/films-api.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst TrandingMovies = ({films, location}) => {\n    return (\n        <div>\n            <h1>Tranding today</h1>\n            <ul>\n                {films.map(({id, title, original_title}) => {\n                    return (\n                        <li key={id}>\n                            <Link to={`movies/${id}`} state={{from: location}}>\n                                <p>{original_title ? original_title : title}</p>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    )\n};\n\nexport default TrandingMovies;","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getTrandingMovies } from \"services/films-api\";\nimport TrandingMovies from \"components/TrandingMovies\";\n\nconst Home = () => {\n    const location = useLocation();\n    const [films, setFilms] = useState([]);\n\n    useEffect(() => { \n        getTrandingMovies()\n        .then(resp => setFilms([...resp.results]));\n    }, []);\n\n    console.log(films);\n\n    return (\n        <TrandingMovies films={films} location={location}/>\n    );\n};\n\nexport default Home;","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Not found')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["films","location","map","id","title","original_title","to","state","from","useLocation","useState","setFilms","useEffect","getTrandingMovies","then","resp","results","console","log","USER_KEY","URL","fetch","res","json","searchMovie","name","response","ok","Promise","reject","Error","getMovieDetails","movieId","getActors","getReviews"],"sourceRoot":""}