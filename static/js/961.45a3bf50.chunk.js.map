{"version":3,"file":"static/js/961.45a3bf50.chunk.js","mappings":"oOAkBA,EAlBmB,SAAC,GAAc,IAAbA,EAAY,EAAZA,OACjB,OACI,+BACI,wBACKA,EAAOC,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAClC,OACI,2BACI,gBAAKC,IAAG,yCAAoCH,GAAgBI,IAAI,MAChE,uBAAIH,KACJ,uBAAIC,MAHCH,EAMhB,OAIhB,ECQD,EAnBa,WACT,IAAOM,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA2BE,EAAAA,EAAAA,UAAS,IAApC,eAAOV,EAAP,KAAeW,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACFJ,IAEJK,EAAAA,EAAAA,IAAUL,GACTM,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAASI,EAArB,GAET,GAAE,CAACP,KAGA,+BACI,SAAC,EAAD,CAAYR,OAAQA,KAG/B,C,uJCFD,IAAMgB,EAAW,mCACXC,EAAM,gCAECC,EAAoB,WAC7B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,oCAAmCD,IAC1CF,MAAK,SAAAM,GAAG,OAAIA,EAAIC,MAAR,GAEhB,EAEYC,EAAc,SAAClB,GACxB,OAAOe,MAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,4DAA2FZ,IACtGU,MAAK,SAAAS,GACF,OAAGA,EAASC,GACDD,EAASF,OAGbI,QAAQC,OACX,IAAIC,MAAJ,UAAavB,EAAb,eAEP,GACJ,EAEYwB,EAAkB,SAACpB,GAC5B,OAAOW,MAAM,GAAD,OAAIF,EAAJ,iBAAgBT,EAAhB,oBAAmCQ,EAAnC,oBACXF,MAAK,SAAAS,GACF,OAAGA,EAASC,GACDD,EAASF,OAGbI,QAAQC,OACX,IAAIC,MAAM,aAEjB,GACJ,EAEYd,EAAY,SAACL,GACtB,OAAOW,MAAM,GAAD,OAAIF,EAAJ,iBAAgBT,EAAhB,4BAA2CQ,EAA3C,oBACXF,MAAK,SAAAM,GAAG,OAAIA,EAAIC,MAAR,GACZ,EAEYQ,EAAa,SAACrB,GACvB,OAAOW,MAAM,GAAD,OAAIF,EAAJ,iBAAgBT,EAAhB,4BAA2CQ,EAA3C,2BACXF,MAAK,SAAAM,GAAG,OAAIA,EAAIC,MAAR,GACZ,C","sources":["components/ActorsList/ActorsList.jsx","components/Cast/Cast.jsx","services/films-api.js"],"sourcesContent":["const ActorsList = ({actors}) => {\n    return (\n        <>\n            <ul>\n                {actors.map(({id, profile_path, name, character}) => {\n                    return (\n                        <li key={id}>\n                            <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt=\"\" />\n                            <p>{name}</p>\n                            <p>{character}</p>\n                        </li>                       \n                    )\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default ActorsList;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getActors } from \"services/films-api\";\nimport ActorsList from \"components/ActorsList\";\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [actors, setActor] = useState([]);\n\n    useEffect(() => {\n        if(!movieId) return;\n\n        getActors(movieId)\n        .then(({cast}) => setActor(cast));\n\n    }, [movieId]);\n\n    return (\n        <>\n            <ActorsList actors={actors}/>\n        </>\n    );\n};\n\nexport default Cast;","// function fetchFilms (search) {\n//     const USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\n//     const URL = 'https://api.themoviedb.org/3/';\n\n//     return (\n//         fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n//         .then(response => {\n//             if(response.ok) {\n//                 return response.json();\n//             }\n        \n//             return Promise.reject(\n//                 new Error('Not found')\n//             );\n//         })\n//     );\n// };\n\n// export default fetchFilms;\n\nconst USER_KEY = 'e7e8717bf37b2131c41f035d5b761556';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = () => {\n    return fetch(`${URL}trending/all/day?api_key=${USER_KEY}`)\n        .then(res => res.json())\n    \n};\n\nexport const searchMovie = (name) => {\n    return fetch(`${URL}search/movie?api_key=${USER_KEY}&language=en-US&page=1&include_adult=false&query=${name}`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error(`${name} not found`)\n        );\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n    return fetch(`${URL}movie/${movieId}?api_key=${USER_KEY}&language=en-US`)\n    .then(response => {\n        if(response.ok) {\n            return response.json();\n        }\n    \n        return Promise.reject(\n            new Error('Not found')\n        );\n    });\n};\n\nexport const getActors = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/credits?api_key=${USER_KEY}&language=en-US`)\n    .then(res => res.json())\n};\n\nexport const getReviews = (movieId) => {\n    return fetch(`${URL}movie/${movieId}/reviews?api_key=${USER_KEY}&language=en-US&page=1`)\n    .then(res => res.json())\n};"],"names":["actors","map","id","profile_path","name","character","src","alt","movieId","useParams","useState","setActor","useEffect","getActors","then","cast","USER_KEY","URL","getTrandingMovies","fetch","res","json","searchMovie","response","ok","Promise","reject","Error","getMovieDetails","getReviews"],"sourceRoot":""}